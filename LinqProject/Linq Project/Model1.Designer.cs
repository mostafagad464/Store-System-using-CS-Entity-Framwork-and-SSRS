//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ProjectModel", "FK_Client_Permission_Details_Client_Permission", "ClientPermission", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Linq_Project.ClientPermission), "ClientPermissionDetails", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Linq_Project.ClientPermissionDetail), true)]
[assembly: EdmRelationshipAttribute("ProjectModel", "FK_Client_Permission_Clients", "Clients", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Linq_Project.Client), "ClientPermission", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Linq_Project.ClientPermission), true)]
[assembly: EdmRelationshipAttribute("ProjectModel", "FK_Client_Permission_Details_Product_Stores", "ProductStores", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Linq_Project.ProductStore), "ClientPermissionDetails", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Linq_Project.ClientPermissionDetail), true)]
[assembly: EdmRelationshipAttribute("ProjectModel", "FK_Client_Permission_Details_Products", "Products", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Linq_Project.Product), "ClientPermissionDetails", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Linq_Project.ClientPermissionDetail), true)]
[assembly: EdmRelationshipAttribute("ProjectModel", "FK_Client_Permission_Details_Stores", "Stores", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Linq_Project.Store), "ClientPermissionDetails", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Linq_Project.ClientPermissionDetail), true)]
[assembly: EdmRelationshipAttribute("ProjectModel", "FK_Move_Products_Products", "Products", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Linq_Project.Product), "MoveProducts", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Linq_Project.MoveProduct), true)]
[assembly: EdmRelationshipAttribute("ProjectModel", "FK_Move_Products_Stores", "Stores", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Linq_Project.Store), "MoveProducts", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Linq_Project.MoveProduct), true)]
[assembly: EdmRelationshipAttribute("ProjectModel", "FK_Move_Products_Stores1", "Stores", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Linq_Project.Store), "MoveProducts", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Linq_Project.MoveProduct), true)]
[assembly: EdmRelationshipAttribute("ProjectModel", "FK_Product_Stores_Products", "Products", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Linq_Project.Product), "ProductStores", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Linq_Project.ProductStore), true)]
[assembly: EdmRelationshipAttribute("ProjectModel", "FK_Product_Unit_Products", "Products", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Linq_Project.Product), "ProductUnit", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Linq_Project.ProductUnit), true)]
[assembly: EdmRelationshipAttribute("ProjectModel", "FK_Supply_Permission_Details_Products", "Products", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Linq_Project.Product), "SupplyPermissionDetails", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Linq_Project.SupplyPermissionDetail), true)]
[assembly: EdmRelationshipAttribute("ProjectModel", "FK_Product_Stores_Stores", "Stores", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Linq_Project.Store), "ProductStores", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Linq_Project.ProductStore), true)]
[assembly: EdmRelationshipAttribute("ProjectModel", "FK_Supply_Permission_Details_Product_Stores", "ProductStores", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Linq_Project.ProductStore), "SupplyPermissionDetails", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Linq_Project.SupplyPermissionDetail), true)]
[assembly: EdmRelationshipAttribute("ProjectModel", "FK_Supply_Permission_Details_Stores", "Stores", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Linq_Project.Store), "SupplyPermissionDetails", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Linq_Project.SupplyPermissionDetail), true)]
[assembly: EdmRelationshipAttribute("ProjectModel", "FK_Supply_Permission_Suppliers", "Suppliers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Linq_Project.Supplier), "SupplyPermission", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Linq_Project.SupplyPermission), true)]
[assembly: EdmRelationshipAttribute("ProjectModel", "FK_Supply_Permission_Details_Supply_Permission1", "SupplyPermission", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Linq_Project.SupplyPermission), "SupplyPermissionDetails", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Linq_Project.SupplyPermissionDetail), true)]

#endregion

namespace Linq_Project
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ProjectEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ProjectEntities object using the connection string found in the 'ProjectEntities' section of the application configuration file.
        /// </summary>
        public ProjectEntities() : base("name=ProjectEntities", "ProjectEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProjectEntities object.
        /// </summary>
        public ProjectEntities(string connectionString) : base(connectionString, "ProjectEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProjectEntities object.
        /// </summary>
        public ProjectEntities(EntityConnection connection) : base(connection, "ProjectEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClientPermission> ClientPermissions
        {
            get
            {
                if ((_ClientPermissions == null))
                {
                    _ClientPermissions = base.CreateObjectSet<ClientPermission>("ClientPermissions");
                }
                return _ClientPermissions;
            }
        }
        private ObjectSet<ClientPermission> _ClientPermissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClientPermissionDetail> ClientPermissionDetails
        {
            get
            {
                if ((_ClientPermissionDetails == null))
                {
                    _ClientPermissionDetails = base.CreateObjectSet<ClientPermissionDetail>("ClientPermissionDetails");
                }
                return _ClientPermissionDetails;
            }
        }
        private ObjectSet<ClientPermissionDetail> _ClientPermissionDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Client> Clients
        {
            get
            {
                if ((_Clients == null))
                {
                    _Clients = base.CreateObjectSet<Client>("Clients");
                }
                return _Clients;
            }
        }
        private ObjectSet<Client> _Clients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MoveProduct> MoveProducts
        {
            get
            {
                if ((_MoveProducts == null))
                {
                    _MoveProducts = base.CreateObjectSet<MoveProduct>("MoveProducts");
                }
                return _MoveProducts;
            }
        }
        private ObjectSet<MoveProduct> _MoveProducts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductStore> ProductStores
        {
            get
            {
                if ((_ProductStores == null))
                {
                    _ProductStores = base.CreateObjectSet<ProductStore>("ProductStores");
                }
                return _ProductStores;
            }
        }
        private ObjectSet<ProductStore> _ProductStores;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductUnit> ProductUnits
        {
            get
            {
                if ((_ProductUnits == null))
                {
                    _ProductUnits = base.CreateObjectSet<ProductUnit>("ProductUnits");
                }
                return _ProductUnits;
            }
        }
        private ObjectSet<ProductUnit> _ProductUnits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Store> Stores
        {
            get
            {
                if ((_Stores == null))
                {
                    _Stores = base.CreateObjectSet<Store>("Stores");
                }
                return _Stores;
            }
        }
        private ObjectSet<Store> _Stores;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Supplier> Suppliers
        {
            get
            {
                if ((_Suppliers == null))
                {
                    _Suppliers = base.CreateObjectSet<Supplier>("Suppliers");
                }
                return _Suppliers;
            }
        }
        private ObjectSet<Supplier> _Suppliers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupplyPermission> SupplyPermissions
        {
            get
            {
                if ((_SupplyPermissions == null))
                {
                    _SupplyPermissions = base.CreateObjectSet<SupplyPermission>("SupplyPermissions");
                }
                return _SupplyPermissions;
            }
        }
        private ObjectSet<SupplyPermission> _SupplyPermissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupplyPermissionDetail> SupplyPermissionDetails
        {
            get
            {
                if ((_SupplyPermissionDetails == null))
                {
                    _SupplyPermissionDetails = base.CreateObjectSet<SupplyPermissionDetail>("SupplyPermissionDetails");
                }
                return _SupplyPermissionDetails;
            }
        }
        private ObjectSet<SupplyPermissionDetail> _SupplyPermissionDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClientPermissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClientPermissions(ClientPermission clientPermission)
        {
            base.AddObject("ClientPermissions", clientPermission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClientPermissionDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClientPermissionDetails(ClientPermissionDetail clientPermissionDetail)
        {
            base.AddObject("ClientPermissionDetails", clientPermissionDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClients(Client client)
        {
            base.AddObject("Clients", client);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MoveProducts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMoveProducts(MoveProduct moveProduct)
        {
            base.AddObject("MoveProducts", moveProduct);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductStores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductStores(ProductStore productStore)
        {
            base.AddObject("ProductStores", productStore);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductUnits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductUnits(ProductUnit productUnit)
        {
            base.AddObject("ProductUnits", productUnit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStores(Store store)
        {
            base.AddObject("Stores", store);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Suppliers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSuppliers(Supplier supplier)
        {
            base.AddObject("Suppliers", supplier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SupplyPermissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSupplyPermissions(SupplyPermission supplyPermission)
        {
            base.AddObject("SupplyPermissions", supplyPermission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SupplyPermissionDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSupplyPermissionDetails(SupplyPermissionDetail supplyPermissionDetail)
        {
            base.AddObject("SupplyPermissionDetails", supplyPermissionDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectModel", Name="Client")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Client : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Client object.
        /// </summary>
        /// <param name="client_ID">Initial value of the Client_ID property.</param>
        public static Client CreateClient(global::System.Int32 client_ID)
        {
            Client client = new Client();
            client.Client_ID = client_ID;
            return client;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Client_ID
        {
            get
            {
                return _Client_ID;
            }
            set
            {
                if (_Client_ID != value)
                {
                    OnClient_IDChanging(value);
                    ReportPropertyChanging("Client_ID");
                    _Client_ID = StructuralObject.SetValidValue(value, "Client_ID");
                    ReportPropertyChanged("Client_ID");
                    OnClient_IDChanged();
                }
            }
        }
        private global::System.Int32 _Client_ID;
        partial void OnClient_IDChanging(global::System.Int32 value);
        partial void OnClient_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Client_Name
        {
            get
            {
                return _Client_Name;
            }
            set
            {
                OnClient_NameChanging(value);
                ReportPropertyChanging("Client_Name");
                _Client_Name = StructuralObject.SetValidValue(value, true, "Client_Name");
                ReportPropertyChanged("Client_Name");
                OnClient_NameChanged();
            }
        }
        private global::System.String _Client_Name;
        partial void OnClient_NameChanging(global::System.String value);
        partial void OnClient_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Client_Phone
        {
            get
            {
                return _Client_Phone;
            }
            set
            {
                OnClient_PhoneChanging(value);
                ReportPropertyChanging("Client_Phone");
                _Client_Phone = StructuralObject.SetValidValue(value, "Client_Phone");
                ReportPropertyChanged("Client_Phone");
                OnClient_PhoneChanged();
            }
        }
        private Nullable<global::System.Int32> _Client_Phone;
        partial void OnClient_PhoneChanging(Nullable<global::System.Int32> value);
        partial void OnClient_PhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Client_Fax
        {
            get
            {
                return _Client_Fax;
            }
            set
            {
                OnClient_FaxChanging(value);
                ReportPropertyChanging("Client_Fax");
                _Client_Fax = StructuralObject.SetValidValue(value, true, "Client_Fax");
                ReportPropertyChanged("Client_Fax");
                OnClient_FaxChanged();
            }
        }
        private global::System.String _Client_Fax;
        partial void OnClient_FaxChanging(global::System.String value);
        partial void OnClient_FaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Client_Mobile
        {
            get
            {
                return _Client_Mobile;
            }
            set
            {
                OnClient_MobileChanging(value);
                ReportPropertyChanging("Client_Mobile");
                _Client_Mobile = StructuralObject.SetValidValue(value, "Client_Mobile");
                ReportPropertyChanged("Client_Mobile");
                OnClient_MobileChanged();
            }
        }
        private Nullable<global::System.Int32> _Client_Mobile;
        partial void OnClient_MobileChanging(Nullable<global::System.Int32> value);
        partial void OnClient_MobileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Client_Email
        {
            get
            {
                return _Client_Email;
            }
            set
            {
                OnClient_EmailChanging(value);
                ReportPropertyChanging("Client_Email");
                _Client_Email = StructuralObject.SetValidValue(value, true, "Client_Email");
                ReportPropertyChanged("Client_Email");
                OnClient_EmailChanged();
            }
        }
        private global::System.String _Client_Email;
        partial void OnClient_EmailChanging(global::System.String value);
        partial void OnClient_EmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Client_Website
        {
            get
            {
                return _Client_Website;
            }
            set
            {
                OnClient_WebsiteChanging(value);
                ReportPropertyChanging("Client_Website");
                _Client_Website = StructuralObject.SetValidValue(value, true, "Client_Website");
                ReportPropertyChanged("Client_Website");
                OnClient_WebsiteChanged();
            }
        }
        private global::System.String _Client_Website;
        partial void OnClient_WebsiteChanging(global::System.String value);
        partial void OnClient_WebsiteChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Client_Permission_Clients", "ClientPermission")]
        public EntityCollection<ClientPermission> ClientPermissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientPermission>("ProjectModel.FK_Client_Permission_Clients", "ClientPermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientPermission>("ProjectModel.FK_Client_Permission_Clients", "ClientPermission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectModel", Name="ClientPermission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClientPermission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClientPermission object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ClientPermission CreateClientPermission(global::System.Int32 id)
        {
            ClientPermission clientPermission = new ClientPermission();
            clientPermission.ID = id;
            return clientPermission;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Client_ID
        {
            get
            {
                return _Client_ID;
            }
            set
            {
                OnClient_IDChanging(value);
                ReportPropertyChanging("Client_ID");
                _Client_ID = StructuralObject.SetValidValue(value, "Client_ID");
                ReportPropertyChanged("Client_ID");
                OnClient_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Client_ID;
        partial void OnClient_IDChanging(Nullable<global::System.Int32> value);
        partial void OnClient_IDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Client_Permission_Details_Client_Permission", "ClientPermissionDetails")]
        public EntityCollection<ClientPermissionDetail> ClientPermissionDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientPermissionDetail>("ProjectModel.FK_Client_Permission_Details_Client_Permission", "ClientPermissionDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientPermissionDetail>("ProjectModel.FK_Client_Permission_Details_Client_Permission", "ClientPermissionDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Client_Permission_Clients", "Clients")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("ProjectModel.FK_Client_Permission_Clients", "Clients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("ProjectModel.FK_Client_Permission_Clients", "Clients").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("ProjectModel.FK_Client_Permission_Clients", "Clients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("ProjectModel.FK_Client_Permission_Clients", "Clients", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectModel", Name="ClientPermissionDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClientPermissionDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClientPermissionDetail object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="product_ID">Initial value of the Product_ID property.</param>
        /// <param name="store_Name">Initial value of the Store_Name property.</param>
        /// <param name="product_Date">Initial value of the Product_Date property.</param>
        public static ClientPermissionDetail CreateClientPermissionDetail(global::System.Int32 id, global::System.Int32 product_ID, global::System.String store_Name, global::System.DateTime product_Date)
        {
            ClientPermissionDetail clientPermissionDetail = new ClientPermissionDetail();
            clientPermissionDetail.ID = id;
            clientPermissionDetail.Product_ID = product_ID;
            clientPermissionDetail.Store_Name = store_Name;
            clientPermissionDetail.Product_Date = product_Date;
            return clientPermissionDetail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Product_ID
        {
            get
            {
                return _Product_ID;
            }
            set
            {
                if (_Product_ID != value)
                {
                    OnProduct_IDChanging(value);
                    ReportPropertyChanging("Product_ID");
                    _Product_ID = StructuralObject.SetValidValue(value, "Product_ID");
                    ReportPropertyChanged("Product_ID");
                    OnProduct_IDChanged();
                }
            }
        }
        private global::System.Int32 _Product_ID;
        partial void OnProduct_IDChanging(global::System.Int32 value);
        partial void OnProduct_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Store_Name
        {
            get
            {
                return _Store_Name;
            }
            set
            {
                if (_Store_Name != value)
                {
                    OnStore_NameChanging(value);
                    ReportPropertyChanging("Store_Name");
                    _Store_Name = StructuralObject.SetValidValue(value, false, "Store_Name");
                    ReportPropertyChanged("Store_Name");
                    OnStore_NameChanged();
                }
            }
        }
        private global::System.String _Store_Name;
        partial void OnStore_NameChanging(global::System.String value);
        partial void OnStore_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Product_Date
        {
            get
            {
                return _Product_Date;
            }
            set
            {
                if (_Product_Date != value)
                {
                    OnProduct_DateChanging(value);
                    ReportPropertyChanging("Product_Date");
                    _Product_Date = StructuralObject.SetValidValue(value, "Product_Date");
                    ReportPropertyChanged("Product_Date");
                    OnProduct_DateChanged();
                }
            }
        }
        private global::System.DateTime _Product_Date;
        partial void OnProduct_DateChanging(global::System.DateTime value);
        partial void OnProduct_DateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Client_Permission_Details_Client_Permission", "ClientPermission")]
        public ClientPermission ClientPermission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientPermission>("ProjectModel.FK_Client_Permission_Details_Client_Permission", "ClientPermission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientPermission>("ProjectModel.FK_Client_Permission_Details_Client_Permission", "ClientPermission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClientPermission> ClientPermissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientPermission>("ProjectModel.FK_Client_Permission_Details_Client_Permission", "ClientPermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClientPermission>("ProjectModel.FK_Client_Permission_Details_Client_Permission", "ClientPermission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Client_Permission_Details_Product_Stores", "ProductStores")]
        public ProductStore ProductStore
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductStore>("ProjectModel.FK_Client_Permission_Details_Product_Stores", "ProductStores").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductStore>("ProjectModel.FK_Client_Permission_Details_Product_Stores", "ProductStores").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductStore> ProductStoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductStore>("ProjectModel.FK_Client_Permission_Details_Product_Stores", "ProductStores");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductStore>("ProjectModel.FK_Client_Permission_Details_Product_Stores", "ProductStores", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Client_Permission_Details_Products", "Products")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ProjectModel.FK_Client_Permission_Details_Products", "Products").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ProjectModel.FK_Client_Permission_Details_Products", "Products").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ProjectModel.FK_Client_Permission_Details_Products", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("ProjectModel.FK_Client_Permission_Details_Products", "Products", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Client_Permission_Details_Stores", "Stores")]
        public Store Store
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("ProjectModel.FK_Client_Permission_Details_Stores", "Stores").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("ProjectModel.FK_Client_Permission_Details_Stores", "Stores").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Store> StoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("ProjectModel.FK_Client_Permission_Details_Stores", "Stores");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Store>("ProjectModel.FK_Client_Permission_Details_Stores", "Stores", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectModel", Name="MoveProduct")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MoveProduct : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MoveProduct object.
        /// </summary>
        /// <param name="product_ID">Initial value of the Product_ID property.</param>
        /// <param name="store_To">Initial value of the Store_To property.</param>
        /// <param name="store_Two">Initial value of the Store_Two property.</param>
        /// <param name="move_Date">Initial value of the Move_Date property.</param>
        /// <param name="product_Date">Initial value of the Product_Date property.</param>
        public static MoveProduct CreateMoveProduct(global::System.Int32 product_ID, global::System.String store_To, global::System.String store_Two, global::System.DateTime move_Date, global::System.DateTime product_Date)
        {
            MoveProduct moveProduct = new MoveProduct();
            moveProduct.Product_ID = product_ID;
            moveProduct.Store_To = store_To;
            moveProduct.Store_Two = store_Two;
            moveProduct.Move_Date = move_Date;
            moveProduct.Product_Date = product_Date;
            return moveProduct;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Product_ID
        {
            get
            {
                return _Product_ID;
            }
            set
            {
                if (_Product_ID != value)
                {
                    OnProduct_IDChanging(value);
                    ReportPropertyChanging("Product_ID");
                    _Product_ID = StructuralObject.SetValidValue(value, "Product_ID");
                    ReportPropertyChanged("Product_ID");
                    OnProduct_IDChanged();
                }
            }
        }
        private global::System.Int32 _Product_ID;
        partial void OnProduct_IDChanging(global::System.Int32 value);
        partial void OnProduct_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Store_To
        {
            get
            {
                return _Store_To;
            }
            set
            {
                if (_Store_To != value)
                {
                    OnStore_ToChanging(value);
                    ReportPropertyChanging("Store_To");
                    _Store_To = StructuralObject.SetValidValue(value, false, "Store_To");
                    ReportPropertyChanged("Store_To");
                    OnStore_ToChanged();
                }
            }
        }
        private global::System.String _Store_To;
        partial void OnStore_ToChanging(global::System.String value);
        partial void OnStore_ToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Store_Two
        {
            get
            {
                return _Store_Two;
            }
            set
            {
                if (_Store_Two != value)
                {
                    OnStore_TwoChanging(value);
                    ReportPropertyChanging("Store_Two");
                    _Store_Two = StructuralObject.SetValidValue(value, false, "Store_Two");
                    ReportPropertyChanged("Store_Two");
                    OnStore_TwoChanged();
                }
            }
        }
        private global::System.String _Store_Two;
        partial void OnStore_TwoChanging(global::System.String value);
        partial void OnStore_TwoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Move_Date
        {
            get
            {
                return _Move_Date;
            }
            set
            {
                if (_Move_Date != value)
                {
                    OnMove_DateChanging(value);
                    ReportPropertyChanging("Move_Date");
                    _Move_Date = StructuralObject.SetValidValue(value, "Move_Date");
                    ReportPropertyChanged("Move_Date");
                    OnMove_DateChanged();
                }
            }
        }
        private global::System.DateTime _Move_Date;
        partial void OnMove_DateChanging(global::System.DateTime value);
        partial void OnMove_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Product_Date
        {
            get
            {
                return _Product_Date;
            }
            set
            {
                OnProduct_DateChanging(value);
                ReportPropertyChanging("Product_Date");
                _Product_Date = StructuralObject.SetValidValue(value, "Product_Date");
                ReportPropertyChanged("Product_Date");
                OnProduct_DateChanged();
            }
        }
        private global::System.DateTime _Product_Date;
        partial void OnProduct_DateChanging(global::System.DateTime value);
        partial void OnProduct_DateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Move_Products_Products", "Products")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ProjectModel.FK_Move_Products_Products", "Products").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ProjectModel.FK_Move_Products_Products", "Products").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ProjectModel.FK_Move_Products_Products", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("ProjectModel.FK_Move_Products_Products", "Products", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Move_Products_Stores", "Stores")]
        public Store Store
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("ProjectModel.FK_Move_Products_Stores", "Stores").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("ProjectModel.FK_Move_Products_Stores", "Stores").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Store> StoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("ProjectModel.FK_Move_Products_Stores", "Stores");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Store>("ProjectModel.FK_Move_Products_Stores", "Stores", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Move_Products_Stores1", "Stores")]
        public Store Store1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("ProjectModel.FK_Move_Products_Stores1", "Stores").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("ProjectModel.FK_Move_Products_Stores1", "Stores").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Store> Store1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("ProjectModel.FK_Move_Products_Stores1", "Stores");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Store>("ProjectModel.FK_Move_Products_Stores1", "Stores", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="product_ID">Initial value of the Product_ID property.</param>
        public static Product CreateProduct(global::System.Int32 product_ID)
        {
            Product product = new Product();
            product.Product_ID = product_ID;
            return product;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Product_ID
        {
            get
            {
                return _Product_ID;
            }
            set
            {
                if (_Product_ID != value)
                {
                    OnProduct_IDChanging(value);
                    ReportPropertyChanging("Product_ID");
                    _Product_ID = StructuralObject.SetValidValue(value, "Product_ID");
                    ReportPropertyChanged("Product_ID");
                    OnProduct_IDChanged();
                }
            }
        }
        private global::System.Int32 _Product_ID;
        partial void OnProduct_IDChanging(global::System.Int32 value);
        partial void OnProduct_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Product_Name
        {
            get
            {
                return _Product_Name;
            }
            set
            {
                OnProduct_NameChanging(value);
                ReportPropertyChanging("Product_Name");
                _Product_Name = StructuralObject.SetValidValue(value, true, "Product_Name");
                ReportPropertyChanged("Product_Name");
                OnProduct_NameChanged();
            }
        }
        private global::System.String _Product_Name;
        partial void OnProduct_NameChanging(global::System.String value);
        partial void OnProduct_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Product_Period
        {
            get
            {
                return _Product_Period;
            }
            set
            {
                OnProduct_PeriodChanging(value);
                ReportPropertyChanging("Product_Period");
                _Product_Period = StructuralObject.SetValidValue(value, "Product_Period");
                ReportPropertyChanged("Product_Period");
                OnProduct_PeriodChanged();
            }
        }
        private Nullable<global::System.DateTime> _Product_Period;
        partial void OnProduct_PeriodChanging(Nullable<global::System.DateTime> value);
        partial void OnProduct_PeriodChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Client_Permission_Details_Products", "ClientPermissionDetails")]
        public EntityCollection<ClientPermissionDetail> ClientPermissionDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientPermissionDetail>("ProjectModel.FK_Client_Permission_Details_Products", "ClientPermissionDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientPermissionDetail>("ProjectModel.FK_Client_Permission_Details_Products", "ClientPermissionDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Move_Products_Products", "MoveProducts")]
        public EntityCollection<MoveProduct> MoveProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MoveProduct>("ProjectModel.FK_Move_Products_Products", "MoveProducts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MoveProduct>("ProjectModel.FK_Move_Products_Products", "MoveProducts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Product_Stores_Products", "ProductStores")]
        public EntityCollection<ProductStore> ProductStores
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductStore>("ProjectModel.FK_Product_Stores_Products", "ProductStores");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductStore>("ProjectModel.FK_Product_Stores_Products", "ProductStores", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Product_Unit_Products", "ProductUnit")]
        public EntityCollection<ProductUnit> ProductUnits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductUnit>("ProjectModel.FK_Product_Unit_Products", "ProductUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductUnit>("ProjectModel.FK_Product_Unit_Products", "ProductUnit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Supply_Permission_Details_Products", "SupplyPermissionDetails")]
        public EntityCollection<SupplyPermissionDetail> SupplyPermissionDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SupplyPermissionDetail>("ProjectModel.FK_Supply_Permission_Details_Products", "SupplyPermissionDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SupplyPermissionDetail>("ProjectModel.FK_Supply_Permission_Details_Products", "SupplyPermissionDetails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectModel", Name="ProductStore")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductStore : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductStore object.
        /// </summary>
        /// <param name="product_ID">Initial value of the Product_ID property.</param>
        /// <param name="store_Name">Initial value of the Store_Name property.</param>
        /// <param name="product_Date">Initial value of the Product_Date property.</param>
        public static ProductStore CreateProductStore(global::System.Int32 product_ID, global::System.String store_Name, global::System.DateTime product_Date)
        {
            ProductStore productStore = new ProductStore();
            productStore.Product_ID = product_ID;
            productStore.Store_Name = store_Name;
            productStore.Product_Date = product_Date;
            return productStore;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Product_ID
        {
            get
            {
                return _Product_ID;
            }
            set
            {
                if (_Product_ID != value)
                {
                    OnProduct_IDChanging(value);
                    ReportPropertyChanging("Product_ID");
                    _Product_ID = StructuralObject.SetValidValue(value, "Product_ID");
                    ReportPropertyChanged("Product_ID");
                    OnProduct_IDChanged();
                }
            }
        }
        private global::System.Int32 _Product_ID;
        partial void OnProduct_IDChanging(global::System.Int32 value);
        partial void OnProduct_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Store_Name
        {
            get
            {
                return _Store_Name;
            }
            set
            {
                if (_Store_Name != value)
                {
                    OnStore_NameChanging(value);
                    ReportPropertyChanging("Store_Name");
                    _Store_Name = StructuralObject.SetValidValue(value, false, "Store_Name");
                    ReportPropertyChanged("Store_Name");
                    OnStore_NameChanged();
                }
            }
        }
        private global::System.String _Store_Name;
        partial void OnStore_NameChanging(global::System.String value);
        partial void OnStore_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Product_Date
        {
            get
            {
                return _Product_Date;
            }
            set
            {
                if (_Product_Date != value)
                {
                    OnProduct_DateChanging(value);
                    ReportPropertyChanging("Product_Date");
                    _Product_Date = StructuralObject.SetValidValue(value, "Product_Date");
                    ReportPropertyChanged("Product_Date");
                    OnProduct_DateChanged();
                }
            }
        }
        private global::System.DateTime _Product_Date;
        partial void OnProduct_DateChanging(global::System.DateTime value);
        partial void OnProduct_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Client_Permission_Details_Product_Stores", "ClientPermissionDetails")]
        public EntityCollection<ClientPermissionDetail> ClientPermissionDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientPermissionDetail>("ProjectModel.FK_Client_Permission_Details_Product_Stores", "ClientPermissionDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientPermissionDetail>("ProjectModel.FK_Client_Permission_Details_Product_Stores", "ClientPermissionDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Product_Stores_Products", "Products")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ProjectModel.FK_Product_Stores_Products", "Products").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ProjectModel.FK_Product_Stores_Products", "Products").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ProjectModel.FK_Product_Stores_Products", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("ProjectModel.FK_Product_Stores_Products", "Products", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Product_Stores_Stores", "Stores")]
        public Store Store
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("ProjectModel.FK_Product_Stores_Stores", "Stores").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("ProjectModel.FK_Product_Stores_Stores", "Stores").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Store> StoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("ProjectModel.FK_Product_Stores_Stores", "Stores");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Store>("ProjectModel.FK_Product_Stores_Stores", "Stores", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Supply_Permission_Details_Product_Stores", "SupplyPermissionDetails")]
        public EntityCollection<SupplyPermissionDetail> SupplyPermissionDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SupplyPermissionDetail>("ProjectModel.FK_Supply_Permission_Details_Product_Stores", "SupplyPermissionDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SupplyPermissionDetail>("ProjectModel.FK_Supply_Permission_Details_Product_Stores", "SupplyPermissionDetails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectModel", Name="ProductUnit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductUnit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductUnit object.
        /// </summary>
        /// <param name="unit">Initial value of the unit property.</param>
        /// <param name="product_ID">Initial value of the Product_ID property.</param>
        public static ProductUnit CreateProductUnit(global::System.String unit, global::System.Int32 product_ID)
        {
            ProductUnit productUnit = new ProductUnit();
            productUnit.unit = unit;
            productUnit.Product_ID = product_ID;
            return productUnit;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String unit
        {
            get
            {
                return _unit;
            }
            set
            {
                if (_unit != value)
                {
                    OnunitChanging(value);
                    ReportPropertyChanging("unit");
                    _unit = StructuralObject.SetValidValue(value, false, "unit");
                    ReportPropertyChanged("unit");
                    OnunitChanged();
                }
            }
        }
        private global::System.String _unit;
        partial void OnunitChanging(global::System.String value);
        partial void OnunitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Product_ID
        {
            get
            {
                return _Product_ID;
            }
            set
            {
                if (_Product_ID != value)
                {
                    OnProduct_IDChanging(value);
                    ReportPropertyChanging("Product_ID");
                    _Product_ID = StructuralObject.SetValidValue(value, "Product_ID");
                    ReportPropertyChanged("Product_ID");
                    OnProduct_IDChanged();
                }
            }
        }
        private global::System.Int32 _Product_ID;
        partial void OnProduct_IDChanging(global::System.Int32 value);
        partial void OnProduct_IDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Product_Unit_Products", "Products")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ProjectModel.FK_Product_Unit_Products", "Products").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ProjectModel.FK_Product_Unit_Products", "Products").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ProjectModel.FK_Product_Unit_Products", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("ProjectModel.FK_Product_Unit_Products", "Products", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectModel", Name="Store")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Store : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Store object.
        /// </summary>
        /// <param name="store_Name">Initial value of the Store_Name property.</param>
        public static Store CreateStore(global::System.String store_Name)
        {
            Store store = new Store();
            store.Store_Name = store_Name;
            return store;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Store_Name
        {
            get
            {
                return _Store_Name;
            }
            set
            {
                if (_Store_Name != value)
                {
                    OnStore_NameChanging(value);
                    ReportPropertyChanging("Store_Name");
                    _Store_Name = StructuralObject.SetValidValue(value, false, "Store_Name");
                    ReportPropertyChanged("Store_Name");
                    OnStore_NameChanged();
                }
            }
        }
        private global::System.String _Store_Name;
        partial void OnStore_NameChanging(global::System.String value);
        partial void OnStore_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Store_Addres
        {
            get
            {
                return _Store_Addres;
            }
            set
            {
                OnStore_AddresChanging(value);
                ReportPropertyChanging("Store_Addres");
                _Store_Addres = StructuralObject.SetValidValue(value, true, "Store_Addres");
                ReportPropertyChanged("Store_Addres");
                OnStore_AddresChanged();
            }
        }
        private global::System.String _Store_Addres;
        partial void OnStore_AddresChanging(global::System.String value);
        partial void OnStore_AddresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Store_Keeper
        {
            get
            {
                return _Store_Keeper;
            }
            set
            {
                OnStore_KeeperChanging(value);
                ReportPropertyChanging("Store_Keeper");
                _Store_Keeper = StructuralObject.SetValidValue(value, true, "Store_Keeper");
                ReportPropertyChanged("Store_Keeper");
                OnStore_KeeperChanged();
            }
        }
        private global::System.String _Store_Keeper;
        partial void OnStore_KeeperChanging(global::System.String value);
        partial void OnStore_KeeperChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Client_Permission_Details_Stores", "ClientPermissionDetails")]
        public EntityCollection<ClientPermissionDetail> ClientPermissionDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientPermissionDetail>("ProjectModel.FK_Client_Permission_Details_Stores", "ClientPermissionDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientPermissionDetail>("ProjectModel.FK_Client_Permission_Details_Stores", "ClientPermissionDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Move_Products_Stores", "MoveProducts")]
        public EntityCollection<MoveProduct> MoveProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MoveProduct>("ProjectModel.FK_Move_Products_Stores", "MoveProducts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MoveProduct>("ProjectModel.FK_Move_Products_Stores", "MoveProducts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Move_Products_Stores1", "MoveProducts")]
        public EntityCollection<MoveProduct> MoveProducts1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MoveProduct>("ProjectModel.FK_Move_Products_Stores1", "MoveProducts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MoveProduct>("ProjectModel.FK_Move_Products_Stores1", "MoveProducts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Product_Stores_Stores", "ProductStores")]
        public EntityCollection<ProductStore> ProductStores
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductStore>("ProjectModel.FK_Product_Stores_Stores", "ProductStores");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductStore>("ProjectModel.FK_Product_Stores_Stores", "ProductStores", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Supply_Permission_Details_Stores", "SupplyPermissionDetails")]
        public EntityCollection<SupplyPermissionDetail> SupplyPermissionDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SupplyPermissionDetail>("ProjectModel.FK_Supply_Permission_Details_Stores", "SupplyPermissionDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SupplyPermissionDetail>("ProjectModel.FK_Supply_Permission_Details_Stores", "SupplyPermissionDetails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectModel", Name="Supplier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Supplier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Supplier object.
        /// </summary>
        /// <param name="suppliers_ID">Initial value of the Suppliers_ID property.</param>
        public static Supplier CreateSupplier(global::System.Int32 suppliers_ID)
        {
            Supplier supplier = new Supplier();
            supplier.Suppliers_ID = suppliers_ID;
            return supplier;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Suppliers_ID
        {
            get
            {
                return _Suppliers_ID;
            }
            set
            {
                if (_Suppliers_ID != value)
                {
                    OnSuppliers_IDChanging(value);
                    ReportPropertyChanging("Suppliers_ID");
                    _Suppliers_ID = StructuralObject.SetValidValue(value, "Suppliers_ID");
                    ReportPropertyChanged("Suppliers_ID");
                    OnSuppliers_IDChanged();
                }
            }
        }
        private global::System.Int32 _Suppliers_ID;
        partial void OnSuppliers_IDChanging(global::System.Int32 value);
        partial void OnSuppliers_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suppliers_Name
        {
            get
            {
                return _Suppliers_Name;
            }
            set
            {
                OnSuppliers_NameChanging(value);
                ReportPropertyChanging("Suppliers_Name");
                _Suppliers_Name = StructuralObject.SetValidValue(value, true, "Suppliers_Name");
                ReportPropertyChanged("Suppliers_Name");
                OnSuppliers_NameChanged();
            }
        }
        private global::System.String _Suppliers_Name;
        partial void OnSuppliers_NameChanging(global::System.String value);
        partial void OnSuppliers_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Suppliers_Phone
        {
            get
            {
                return _Suppliers_Phone;
            }
            set
            {
                OnSuppliers_PhoneChanging(value);
                ReportPropertyChanging("Suppliers_Phone");
                _Suppliers_Phone = StructuralObject.SetValidValue(value, "Suppliers_Phone");
                ReportPropertyChanged("Suppliers_Phone");
                OnSuppliers_PhoneChanged();
            }
        }
        private Nullable<global::System.Int32> _Suppliers_Phone;
        partial void OnSuppliers_PhoneChanging(Nullable<global::System.Int32> value);
        partial void OnSuppliers_PhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suppliers_fax
        {
            get
            {
                return _Suppliers_fax;
            }
            set
            {
                OnSuppliers_faxChanging(value);
                ReportPropertyChanging("Suppliers_fax");
                _Suppliers_fax = StructuralObject.SetValidValue(value, true, "Suppliers_fax");
                ReportPropertyChanged("Suppliers_fax");
                OnSuppliers_faxChanged();
            }
        }
        private global::System.String _Suppliers_fax;
        partial void OnSuppliers_faxChanging(global::System.String value);
        partial void OnSuppliers_faxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Suppliers_Mobile
        {
            get
            {
                return _Suppliers_Mobile;
            }
            set
            {
                OnSuppliers_MobileChanging(value);
                ReportPropertyChanging("Suppliers_Mobile");
                _Suppliers_Mobile = StructuralObject.SetValidValue(value, "Suppliers_Mobile");
                ReportPropertyChanged("Suppliers_Mobile");
                OnSuppliers_MobileChanged();
            }
        }
        private Nullable<global::System.Int32> _Suppliers_Mobile;
        partial void OnSuppliers_MobileChanging(Nullable<global::System.Int32> value);
        partial void OnSuppliers_MobileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suppliers_Email
        {
            get
            {
                return _Suppliers_Email;
            }
            set
            {
                OnSuppliers_EmailChanging(value);
                ReportPropertyChanging("Suppliers_Email");
                _Suppliers_Email = StructuralObject.SetValidValue(value, true, "Suppliers_Email");
                ReportPropertyChanged("Suppliers_Email");
                OnSuppliers_EmailChanged();
            }
        }
        private global::System.String _Suppliers_Email;
        partial void OnSuppliers_EmailChanging(global::System.String value);
        partial void OnSuppliers_EmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suppliers_Website
        {
            get
            {
                return _Suppliers_Website;
            }
            set
            {
                OnSuppliers_WebsiteChanging(value);
                ReportPropertyChanging("Suppliers_Website");
                _Suppliers_Website = StructuralObject.SetValidValue(value, true, "Suppliers_Website");
                ReportPropertyChanged("Suppliers_Website");
                OnSuppliers_WebsiteChanged();
            }
        }
        private global::System.String _Suppliers_Website;
        partial void OnSuppliers_WebsiteChanging(global::System.String value);
        partial void OnSuppliers_WebsiteChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Supply_Permission_Suppliers", "SupplyPermission")]
        public EntityCollection<SupplyPermission> SupplyPermissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SupplyPermission>("ProjectModel.FK_Supply_Permission_Suppliers", "SupplyPermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SupplyPermission>("ProjectModel.FK_Supply_Permission_Suppliers", "SupplyPermission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectModel", Name="SupplyPermission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupplyPermission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SupplyPermission object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static SupplyPermission CreateSupplyPermission(global::System.Int32 id)
        {
            SupplyPermission supplyPermission = new SupplyPermission();
            supplyPermission.ID = id;
            return supplyPermission;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Suppliers_ID
        {
            get
            {
                return _Suppliers_ID;
            }
            set
            {
                OnSuppliers_IDChanging(value);
                ReportPropertyChanging("Suppliers_ID");
                _Suppliers_ID = StructuralObject.SetValidValue(value, "Suppliers_ID");
                ReportPropertyChanged("Suppliers_ID");
                OnSuppliers_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Suppliers_ID;
        partial void OnSuppliers_IDChanging(Nullable<global::System.Int32> value);
        partial void OnSuppliers_IDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Supply_Permission_Suppliers", "Suppliers")]
        public Supplier Supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("ProjectModel.FK_Supply_Permission_Suppliers", "Suppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("ProjectModel.FK_Supply_Permission_Suppliers", "Suppliers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> SupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("ProjectModel.FK_Supply_Permission_Suppliers", "Suppliers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("ProjectModel.FK_Supply_Permission_Suppliers", "Suppliers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Supply_Permission_Details_Supply_Permission1", "SupplyPermissionDetails")]
        public EntityCollection<SupplyPermissionDetail> SupplyPermissionDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SupplyPermissionDetail>("ProjectModel.FK_Supply_Permission_Details_Supply_Permission1", "SupplyPermissionDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SupplyPermissionDetail>("ProjectModel.FK_Supply_Permission_Details_Supply_Permission1", "SupplyPermissionDetails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectModel", Name="SupplyPermissionDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupplyPermissionDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SupplyPermissionDetail object.
        /// </summary>
        /// <param name="product_ID">Initial value of the Product_ID property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="store_Name">Initial value of the Store_Name property.</param>
        /// <param name="product_Date">Initial value of the Product_Date property.</param>
        public static SupplyPermissionDetail CreateSupplyPermissionDetail(global::System.Int32 product_ID, global::System.Int32 id, global::System.String store_Name, global::System.DateTime product_Date)
        {
            SupplyPermissionDetail supplyPermissionDetail = new SupplyPermissionDetail();
            supplyPermissionDetail.Product_ID = product_ID;
            supplyPermissionDetail.ID = id;
            supplyPermissionDetail.Store_Name = store_Name;
            supplyPermissionDetail.Product_Date = product_Date;
            return supplyPermissionDetail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Product_ID
        {
            get
            {
                return _Product_ID;
            }
            set
            {
                if (_Product_ID != value)
                {
                    OnProduct_IDChanging(value);
                    ReportPropertyChanging("Product_ID");
                    _Product_ID = StructuralObject.SetValidValue(value, "Product_ID");
                    ReportPropertyChanged("Product_ID");
                    OnProduct_IDChanged();
                }
            }
        }
        private global::System.Int32 _Product_ID;
        partial void OnProduct_IDChanging(global::System.Int32 value);
        partial void OnProduct_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Store_Name
        {
            get
            {
                return _Store_Name;
            }
            set
            {
                if (_Store_Name != value)
                {
                    OnStore_NameChanging(value);
                    ReportPropertyChanging("Store_Name");
                    _Store_Name = StructuralObject.SetValidValue(value, false, "Store_Name");
                    ReportPropertyChanged("Store_Name");
                    OnStore_NameChanged();
                }
            }
        }
        private global::System.String _Store_Name;
        partial void OnStore_NameChanging(global::System.String value);
        partial void OnStore_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, true, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.String _Quantity;
        partial void OnQuantityChanging(global::System.String value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Product_Date
        {
            get
            {
                return _Product_Date;
            }
            set
            {
                if (_Product_Date != value)
                {
                    OnProduct_DateChanging(value);
                    ReportPropertyChanging("Product_Date");
                    _Product_Date = StructuralObject.SetValidValue(value, "Product_Date");
                    ReportPropertyChanged("Product_Date");
                    OnProduct_DateChanged();
                }
            }
        }
        private global::System.DateTime _Product_Date;
        partial void OnProduct_DateChanging(global::System.DateTime value);
        partial void OnProduct_DateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Supply_Permission_Details_Products", "Products")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ProjectModel.FK_Supply_Permission_Details_Products", "Products").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ProjectModel.FK_Supply_Permission_Details_Products", "Products").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ProjectModel.FK_Supply_Permission_Details_Products", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("ProjectModel.FK_Supply_Permission_Details_Products", "Products", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Supply_Permission_Details_Product_Stores", "ProductStores")]
        public ProductStore ProductStore
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductStore>("ProjectModel.FK_Supply_Permission_Details_Product_Stores", "ProductStores").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductStore>("ProjectModel.FK_Supply_Permission_Details_Product_Stores", "ProductStores").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductStore> ProductStoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductStore>("ProjectModel.FK_Supply_Permission_Details_Product_Stores", "ProductStores");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductStore>("ProjectModel.FK_Supply_Permission_Details_Product_Stores", "ProductStores", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Supply_Permission_Details_Stores", "Stores")]
        public Store Store
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("ProjectModel.FK_Supply_Permission_Details_Stores", "Stores").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("ProjectModel.FK_Supply_Permission_Details_Stores", "Stores").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Store> StoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("ProjectModel.FK_Supply_Permission_Details_Stores", "Stores");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Store>("ProjectModel.FK_Supply_Permission_Details_Stores", "Stores", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectModel", "FK_Supply_Permission_Details_Supply_Permission1", "SupplyPermission")]
        public SupplyPermission SupplyPermission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SupplyPermission>("ProjectModel.FK_Supply_Permission_Details_Supply_Permission1", "SupplyPermission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SupplyPermission>("ProjectModel.FK_Supply_Permission_Details_Supply_Permission1", "SupplyPermission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SupplyPermission> SupplyPermissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SupplyPermission>("ProjectModel.FK_Supply_Permission_Details_Supply_Permission1", "SupplyPermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SupplyPermission>("ProjectModel.FK_Supply_Permission_Details_Supply_Permission1", "SupplyPermission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value, "principal_id");
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value, "diagram_id");
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }

    #endregion

}
